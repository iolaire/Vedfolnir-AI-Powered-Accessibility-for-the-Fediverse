# Copyright (C) 2025 iolaire mcfadden.
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Vedfolnir Docker Compose Environment Configuration
# This file contains container-specific environment variables for Docker Compose deployment
# Copy this file to .env when deploying with Docker Compose

# =============================================================================
# DOCKER DEPLOYMENT CONFIGURATION
# =============================================================================

# Docker deployment flag
DOCKER_DEPLOYMENT=true
CONTAINER_NAME=vedfolnir_app

# =============================================================================
# CONTAINER NETWORKING CONFIGURATION
# =============================================================================

# Database connections use container networking (mysql:3306 instead of localhost)
DATABASE_URL=mysql+pymysql://vedfolnir:${MYSQL_PASSWORD}@mysql:3306/vedfolnir?charset=utf8mb4
DB_HOST=mysql
DB_PORT=3306
DB_NAME=vedfolnir
DB_USER=vedfolnir
DB_PASSWORD=${MYSQL_PASSWORD}

# Redis connections use container networking (redis:6379 instead of localhost)
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=${REDIS_PASSWORD}

# Ollama connections use container networking (ollama:11434 instead of localhost)
OLLAMA_URL=http://ollama:11434
OLLAMA_HOST=ollama
OLLAMA_PORT=11434

# =============================================================================
# OBSERVABILITY SERVICE NETWORKING
# =============================================================================

# Prometheus metrics collection
PROMETHEUS_URL=http://prometheus:9090

# Grafana monitoring dashboard
GRAFANA_URL=http://grafana:3000

# Loki log aggregation
LOKI_URL=http://loki:3100

# =============================================================================
# SECRETS MANAGEMENT CONFIGURATION
# =============================================================================

# HashiCorp Vault configuration
VAULT_ADDR=http://vault:8200
VAULT_TOKEN_FILE=/run/secrets/vault_token

# Docker secrets file paths
FLASK_SECRET_KEY_FILE=/run/secrets/flask_secret_key
PLATFORM_ENCRYPTION_KEY_FILE=/run/secrets/platform_encryption_key
MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
REDIS_PASSWORD_FILE=/run/secrets/redis_password

# =============================================================================
# FLASK APPLICATION CONFIGURATION
# =============================================================================

# Flask environment for containers
FLASK_ENV=production
FLASK_HOST=0.0.0.0
FLASK_PORT=5000
FLASK_DEBUG=false

# =============================================================================
# RQ WORKER CONFIGURATION (INTEGRATED)
# =============================================================================

# RQ Configuration for containerized environment
RQ_ENABLE_INTEGRATED_WORKERS=true
RQ_ENABLE_EXTERNAL_WORKERS=false
RQ_WORKER_COUNT=2
RQ_WORKER_TIMEOUT=300
RQ_WORKER_MEMORY_LIMIT=500

# RQ Queue Configuration
RQ_QUEUE_PREFIX=vedfolnir:rq:
RQ_DEFAULT_TIMEOUT=300
RQ_RESULT_TTL=86400
RQ_JOB_TTL=7200

# =============================================================================
# CONTAINER RESOURCE LIMITS
# =============================================================================

# Application container resource limits
MEMORY_LIMIT=2g
CPU_LIMIT=2

# MySQL container configuration
MYSQL_MEMORY_LIMIT=4g
MYSQL_CPU_LIMIT=2

# Redis container configuration
REDIS_MEMORY_LIMIT=1g
REDIS_CPU_LIMIT=1

# Ollama container configuration
OLLAMA_MEMORY_LIMIT=8g
OLLAMA_CPU_LIMIT=4

# =============================================================================
# CONTAINER HEALTH CHECK CONFIGURATION
# =============================================================================

# Docker health check settings
DOCKER_HEALTH_CHECK_INTERVAL=30s
DOCKER_HEALTH_CHECK_TIMEOUT=10s
DOCKER_HEALTH_CHECK_RETRIES=3
DOCKER_HEALTH_CHECK_START_PERIOD=60s

# Application health check endpoint
HEALTH_CHECK_ENDPOINT=/health
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=60
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# LOGGING CONFIGURATION FOR CONTAINERS
# =============================================================================

# Container logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5

# Docker logging driver configuration
DOCKER_LOG_DRIVER=json-file
DOCKER_LOG_MAX_SIZE=10m
DOCKER_LOG_MAX_FILE=3

# Structured logging for container environments
ENABLE_STRUCTURED_LOGGING=true
LOG_JSON_FORMAT=true

# =============================================================================
# VOLUME MOUNT CONFIGURATION
# =============================================================================

# Application storage volume mounts
STORAGE_BASE_DIR=/app/storage
STORAGE_IMAGES_DIR=/app/storage/images
LOGS_DIR=/app/logs
CONFIG_DIR=/app/config
BACKUPS_DIR=/app/backups

# MySQL data volume mount
MYSQL_DATA_DIR=/var/lib/mysql
MYSQL_CONFIG_DIR=/etc/mysql/conf.d
MYSQL_BACKUP_DIR=/backups

# Redis data volume mount
REDIS_DATA_DIR=/data
REDIS_CONFIG_FILE=/usr/local/etc/redis/redis.conf

# Ollama model volume mount
OLLAMA_DATA_DIR=/root/.ollama
OLLAMA_MODELS_DIR=/models

# =============================================================================
# NETWORK SECURITY CONFIGURATION
# =============================================================================

# Internal Docker networks
INTERNAL_NETWORK=vedfolnir_internal
MONITORING_NETWORK=vedfolnir_monitoring
EXTERNAL_NETWORK=vedfolnir_external

# Network subnet configuration
INTERNAL_SUBNET=172.20.0.0/16
MONITORING_SUBNET=172.21.0.0/16
EXTERNAL_SUBNET=172.22.0.0/16

# Port exposure strategy (only necessary ports exposed to host)
EXPOSE_MYSQL_PORT=false
EXPOSE_REDIS_PORT=false
EXPOSE_OLLAMA_PORT=false
EXPOSE_VAULT_PORT=false
EXPOSE_PROMETHEUS_PORT=false
EXPOSE_LOKI_PORT=false

# Nginx proxy configuration
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443
NGINX_SSL_ENABLED=true

# =============================================================================
# SESSION MANAGEMENT FOR CONTAINERS
# =============================================================================

# Redis session configuration for containers
SESSION_STORAGE=redis
REDIS_SESSION_PREFIX=vedfolnir:session:
REDIS_SESSION_TIMEOUT=7200
REDIS_SESSION_CLEANUP_INTERVAL=3600

# Session cookie configuration
SESSION_COOKIE_NAME=session
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SECURE=true
SESSION_COOKIE_SAMESITE=Lax
SESSION_COOKIE_MAX_AGE=7200

# Database session fallback
DB_SESSION_FALLBACK=true
DB_SESSION_SYNC=true

# =============================================================================
# SECURITY CONFIGURATION FOR CONTAINERS
# =============================================================================

# Container security settings
SECURITY_CSRF_ENABLED=true
SECURITY_RATE_LIMITING_ENABLED=true
SECURITY_INPUT_VALIDATION_ENABLED=true
SECURITY_HEADERS_ENABLED=true

# SSL/TLS configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Prometheus metrics configuration
METRICS_ENABLED=true
METRICS_INTERVAL=60
METRICS_RETENTION_DAYS=30

# Grafana dashboard configuration
GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
GRAFANA_ALLOW_SIGN_UP=false

# Loki log aggregation configuration
LOKI_RETENTION_PERIOD=168h
LOKI_MAX_CHUNK_AGE=1h

# =============================================================================
# BACKUP AND DISASTER RECOVERY
# =============================================================================

# Automated backup configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# MySQL backup configuration
MYSQL_BACKUP_ENABLED=true
MYSQL_BACKUP_COMPRESSION=true
MYSQL_BACKUP_ENCRYPTION=false

# Redis backup configuration
REDIS_BACKUP_ENABLED=true
REDIS_BACKUP_INTERVAL=3600

# Application data backup configuration
APP_BACKUP_ENABLED=true
APP_BACKUP_INCLUDE_IMAGES=true
APP_BACKUP_INCLUDE_LOGS=false

# =============================================================================
# DEVELOPMENT AND TESTING OVERRIDES
# =============================================================================

# Development environment overrides (uncomment for development)
# FLASK_ENV=development
# FLASK_DEBUG=true
# LOG_LEVEL=DEBUG
# EXPOSE_MYSQL_PORT=true
# EXPOSE_REDIS_PORT=true
# EXPOSE_OLLAMA_PORT=true

# Testing environment overrides (uncomment for testing)
# TESTING_MODE=true
# TEST_DATABASE_URL=mysql+pymysql://test_user:test_password@mysql:3306/vedfolnir_test?charset=utf8mb4
# TEST_REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/1

# =============================================================================
# ENVIRONMENT-SPECIFIC SECRETS
# =============================================================================

# These values should be set in your actual .env file or through Docker secrets
# DO NOT commit actual secret values to version control

# MySQL passwords (set these in your .env file)
MYSQL_ROOT_PASSWORD=your_secure_mysql_root_password_here
MYSQL_PASSWORD=your_secure_mysql_password_here

# Redis password (set this in your .env file)
REDIS_PASSWORD=your_secure_redis_password_here

# Flask secret key (set this in your .env file)
FLASK_SECRET_KEY=your_secure_flask_secret_key_here

# Platform encryption key (set this in your .env file)
PLATFORM_ENCRYPTION_KEY=your_secure_platform_encryption_key_here

# Vault root token (set this in your .env file)
VAULT_ROOT_TOKEN=your_secure_vault_root_token_here

# Grafana admin password (set this in your .env file)
GRAFANA_ADMIN_PASSWORD=your_secure_grafana_admin_password_here

# =============================================================================
# DEPLOYMENT INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env: cp .env.docker .env
# 2. Generate secure secrets: python scripts/setup/generate_docker_secrets.py
# 3. Create secrets directory: mkdir -p secrets
# 4. Place secret files in secrets/ directory
# 5. Start services: docker-compose up -d
# 6. Check health: docker-compose ps
# 7. View logs: docker-compose logs -f vedfolnir
# 8. Access application: http://localhost (via Nginx) or http://localhost:5000 (direct)

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# Common issues and solutions:
# - Service not starting: Check docker-compose logs <service_name>
# - Database connection failed: Verify MYSQL_PASSWORD matches secrets/mysql_password.txt
# - Redis connection failed: Verify REDIS_PASSWORD matches secrets/redis_password.txt
# - Application not accessible: Check Nginx configuration and port exposure
# - Health checks failing: Verify service dependencies and startup order