# Development Dockerfile for Vedfolnir with MySQL support
# Optimized for development workflow with hot reloading and debugging

FROM python:3.11-slim

ARG DEBIAN_FRONTEND=noninteractive

# Install system dependencies including MySQL client and development tools
RUN apt-get update && apt-get install -y \
    # MySQL client and development libraries
    default-mysql-client \
    default-libmysqlclient-dev \
    pkg-config \
    # Build tools for Python packages
    build-essential \
    gcc \
    g++ \
    # Development tools
    vim \
    git \
    htop \
    tree \
    # Network and utility tools
    curl \
    wget \
    netcat-openbsd \
    telnet \
    # Debugging tools
    gdb \
    strace \
    # Cleanup
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create application user
RUN groupadd -r vedfolnir && useradd -r -g vedfolnir -d /app -s /bin/bash vedfolnir

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
COPY requirements-dev.txt .

# Install Python dependencies (including development packages)
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-dev.txt

# Install additional development packages
RUN pip install --no-cache-dir \
    debugpy \
    pytest \
    pytest-cov \
    pytest-mock \
    flask-debugtoolbar \
    memory-profiler \
    line-profiler \
    ipython \
    ipdb

# Copy application code (in development, this will be mounted as volume)
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p storage/dev/images logs/dev backups/dev/mysql && \
    chown -R vedfolnir:vedfolnir /app && \
    chmod +x scripts/deploy_mysql.sh

# Copy Docker-specific scripts
COPY docker/scripts/wait-for-mysql.sh /usr/local/bin/
COPY docker/scripts/init-app-dev.sh /usr/local/bin/
COPY docker/scripts/health-check-dev.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/*.sh

# Switch to non-root user
USER vedfolnir

# Development-specific environment variables
ENV PYTHONPATH=/app
ENV FLASK_APP=web_app.py
ENV FLASK_ENV=development
ENV FLASK_DEBUG=true
ENV PYTHONUNBUFFERED=1
ENV LOG_LEVEL=DEBUG
ENV DEVELOPMENT_MODE=true

# Development health check (more frequent)
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
    CMD /usr/local/bin/health-check-dev.sh

# Expose ports
EXPOSE 5000 5678

# Development command with debugger support
CMD ["/usr/local/bin/wait-for-mysql.sh", "mysql-dev", "/usr/local/bin/init-app-dev.sh"]
