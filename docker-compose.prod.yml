# Copyright (C) 2025 iolaire mcfadden.
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


services:
  # Main Vedfolnir Application - Production Configuration
  vedfolnir:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: vedfolnir_prod
    # No direct port exposure - only through nginx
    volumes:
      # Production-specific mounts (read-only where possible)
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./config:/app/config:ro
      - ./backups:/app/backups
    environment:
      # Production environment variables
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      
      # Database connections
      - DATABASE_URL=mysql+pymysql://vedfolnir:${MYSQL_PASSWORD}@mysql:3306/vedfolnir?charset=utf8mb4
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      
      # External services
      - OLLAMA_URL=http://host.docker.internal:11434
      
      # Production-specific settings
      - TESTING=false
      - HOT_RELOAD=false
      - AUTO_RELOAD=false
      - PROFILING_ENABLED=false
      
      # Security (strict for production)
      - SECURITY_CSRF_ENABLED=true
      - SECURITY_RATE_LIMITING_ENABLED=true
      - SESSION_COOKIE_SECURE=true
      - SESSION_COOKIE_HTTPONLY=true
      - SESSION_COOKIE_SAMESITE=Strict
      
      # Performance optimizations
      - GUNICORN_WORKERS=4
      - GUNICORN_THREADS=2
      - GUNICORN_WORKER_CLASS=eventlet
      - GUNICORN_MAX_REQUESTS=1000
      - GUNICORN_MAX_REQUESTS_JITTER=100
      
      # Monitoring
      - PROMETHEUS_ENABLED=true
      - METRICS_ENABLED=true
      - HEALTH_CHECK_ENABLED=true
    secrets:
      - flask_secret_key
      - platform_encryption_key
      - mysql_password
      - redis_password
      - vault_token
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      vault:
        condition: service_healthy
    networks:
      - vedfolnir_internal
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    # Production resource limits (optimized)
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      replicas: 2
      update_config:
        parallelism: 1
        delay: 30s
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=vedfolnir,environment=production"

  # MariaDB Database - Production Configuration
  mysql:
    image: mariadb:10.11
    platform: linux/amd64
    container_name: vedfolnir_mysql_prod
    # No port exposure for security
    environment:
      # MariaDB environment variables
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MARIADB_DATABASE=vedfolnir
      - MARIADB_USER=vedfolnir
      - MARIADB_PASSWORD_FILE=/run/secrets/mysql_password
      # Legacy MySQL compatibility
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password
      - MYSQL_DATABASE=vedfolnir
      - MYSQL_USER=vedfolnir
      - MYSQL_PASSWORD_FILE=/run/secrets/mysql_password
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./config/mysql/production.cnf:/etc/mysql/conf.d/production.cnf:ro
      - ./logs/mysql:/var/log/mysql
      - ./backups/mysql:/backups
    secrets:
      - mysql_root_password
      - mysql_password
    networks:
      - vedfolnir_internal
    restart: always
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=mysql,environment=production"

  # Redis - Production Configuration
  redis:
    image: redis:7-alpine
    container_name: vedfolnir_redis_prod
    # No port exposure for security
    volumes:
      - redis_prod_data:/data
      - ./config/redis/production.conf:/usr/local/etc/redis/redis.conf:ro
      - ./logs/redis:/var/log/redis
    secrets:
      - redis_password
    networks:
      - vedfolnir_internal
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$(cat /run/secrets/redis_password)", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=redis,environment=production"

  # HashiCorp Vault - Production Configuration
  vault:
    image: vault:latest
    container_name: vedfolnir_vault_prod
    cap_add:
      - IPC_LOCK
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID_FILE=/run/secrets/vault_root_token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_LOCAL_CONFIG={"storage":{"file":{"path":"/vault/data"}},"listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable":true}},"default_lease_ttl":"168h","max_lease_ttl":"720h","ui":true}
    volumes:
      - vault_prod_data:/vault/data
      - ./config/vault:/vault/config:ro
      - ./logs/vault:/vault/logs
    secrets:
      - vault_root_token
    networks:
      - vedfolnir_internal
    restart: always
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=vault,environment=production"

  # Nginx - Production Configuration
  nginx:
    image: nginx:alpine
    container_name: vedfolnir_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - ./static:/var/www/static:ro
    depends_on:
      - vedfolnir
    networks:
      - vedfolnir_external
      - vedfolnir_internal
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=nginx,environment=production"

  # Prometheus - Production Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: vedfolnir_prometheus_prod
    volumes:
      - ./config/prometheus:/etc/prometheus:ro
      - prometheus_prod_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - vedfolnir_internal
      - vedfolnir_monitoring
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=prometheus,environment=production"

  # Grafana - Production Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: vedfolnir_grafana_prod
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_prod_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana:ro
    secrets:
      - grafana_admin_password
    depends_on:
      - prometheus
    networks:
      - vedfolnir_monitoring
      - vedfolnir_external
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=grafana,environment=production"

  # Loki - Production Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: vedfolnir_loki_prod
    volumes:
      - ./config/loki:/etc/loki:ro
      - loki_prod_data:/loki
    command: -config.file=/etc/loki/loki.yml
    networks:
      - vedfolnir_internal
      - vedfolnir_monitoring
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Production resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=loki,environment=production"

volumes:
  mysql_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  vault_prod_data:
    driver: local
  prometheus_prod_data:
    driver: local
  grafana_prod_data:
    driver: local
  loki_prod_data:
    driver: local

networks:
  vedfolnir_internal:
    driver: bridge
    internal: true  # Secure internal network
  vedfolnir_external:
    driver: bridge
  vedfolnir_monitoring:
    driver: bridge
    internal: true

# Production secrets (secure)
secrets:
  flask_secret_key:
    file: ./secrets/flask_secret_key.txt
  platform_encryption_key:
    file: ./secrets/platform_encryption_key.txt
  mysql_root_password:
    file: ./secrets/mysql_root_password.txt
  mysql_password:
    file: ./secrets/mysql_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  vault_root_token:
    file: ./secrets/vault_root_token.txt
  vault_token:
    file: ./secrets/vault_token.txt
  grafana_admin_password:
    file: ./secrets/grafana_admin_password.txt