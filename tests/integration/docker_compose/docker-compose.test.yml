# Copyright (C) 2025 iolaire mcfadden.
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Docker Compose Test Configuration
# Optimized configuration for running integration tests

version: '3.8'

services:
  # Test runner service
  test-runner:
    build:
      context: ../../..
      dockerfile: Dockerfile
      target: development
    volumes:
      - ../../../:/app
      - ./test-results:/app/test-results
    environment:
      - TESTING=true
      - DATABASE_URL=mysql+pymysql://test:test@mysql-test:3306/vedfolnir_test?charset=utf8mb4
      - REDIS_URL=redis://redis-test:6379/0
      - OLLAMA_URL=http://host.docker.internal:11434
      - FLASK_ENV=testing
      - LOG_LEVEL=DEBUG
    depends_on:
      mysql-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network
    command: ["python", "-m", "pytest", "tests/integration/docker_compose/", "-v", "--tb=short"]

  # Test MySQL database
  mysql-test:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: testroot
      MYSQL_DATABASE: vedfolnir_test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"  # Different port to avoid conflicts
    volumes:
      - mysql-test-data:/var/lib/mysql
      - ../../../config/mysql/development.cnf:/etc/mysql/conf.d/vedfolnir.cnf
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "test", "-ptest"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test Redis
  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis-test-data:/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Test Nginx (optional)
  nginx-test:
    image: nginx:alpine
    ports:
      - "8080:80"  # Different port to avoid conflicts
    volumes:
      - ../../../config/nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - test-runner
    networks:
      - test-network

  # Test Prometheus (optional)
  prometheus-test:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"  # Different port to avoid conflicts
    volumes:
      - ../../../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-test-data:/prometheus
    networks:
      - test-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Test Grafana (optional)
  grafana-test:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"  # Different port to avoid conflicts
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=test
    volumes:
      - grafana-test-data:/var/lib/grafana
    networks:
      - test-network

  # Test Loki (optional)
  loki-test:
    image: grafana/loki:latest
    ports:
      - "3101:3100"  # Different port to avoid conflicts
    volumes:
      - ../../../config/loki/loki.yml:/etc/loki/local-config.yaml
      - loki-test-data:/loki
    networks:
      - test-network
    command: -config.file=/etc/loki/local-config.yaml

  # Test Vault (optional)
  vault-test:
    image: vault:latest
    ports:
      - "8201:8200"  # Different port to avoid conflicts
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: test-root-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    volumes:
      - vault-test-data:/vault/data
    networks:
      - test-network
    cap_add:
      - IPC_LOCK

networks:
  test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql-test-data:
    driver: local
  redis-test-data:
    driver: local
  prometheus-test-data:
    driver: local
  grafana-test-data:
    driver: local
  loki-test-data:
    driver: local
  vault-test-data:
    driver: local