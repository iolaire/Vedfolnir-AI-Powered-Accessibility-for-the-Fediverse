#!/usr/bin/env python3\n\"\"\"\nEnvironment Files Cleanup Script\n\nCleans up .env files by removing deprecated platform-specific settings\nand organizing configuration for better security and maintainability.\n\"\"\"\n\nimport os\nimport shutil\nfrom datetime import datetime\n\ndef backup_current_files():\n    \"\"\"Create backups of current .env files\"\"\"\n    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n    backups_created = []\n    \n    files_to_backup = ['.env', '.env.example']\n    \n    for file_path in files_to_backup:\n        if os.path.exists(file_path):\n            backup_name = f\"{file_path}.backup_{timestamp}\"\n            shutil.copy2(file_path, backup_name)\n            backups_created.append(backup_name)\n            print(f\"‚úÖ Created backup: {backup_name}\")\n    \n    return backups_created\n\ndef replace_env_files():\n    \"\"\"Replace .env files with cleaned versions\"\"\"\n    replacements = [\n        ('.env.clean', '.env'),\n        ('.env.example.clean', '.env.example')\n    ]\n    \n    for source, target in replacements:\n        if os.path.exists(source):\n            shutil.move(source, target)\n            print(f\"‚úÖ Replaced {target} with cleaned version\")\n        else:\n            print(f\"‚ùå Source file {source} not found\")\n\ndef remove_deprecated_env_files():\n    \"\"\"Remove deprecated .env files\"\"\"\n    # Create scripts/setup directory if it doesn't exist\n    os.makedirs('scripts/setup', exist_ok=True)\n    \n    files_to_remove = [\n        '.env.backup',\n        '.env.example.mastodon',\n        '.env.example.pixelfed'\n    ]\n    \n    removed_files = []\n    for file_path in files_to_remove:\n        if os.path.exists(file_path):\n            # Move to scripts/setup as deprecated reference\n            backup_path = f\"scripts/setup/{file_path}.deprecated\"\n            shutil.move(file_path, backup_path)\n            removed_files.append(file_path)\n            print(f\"‚úÖ Moved {file_path} to {backup_path} (deprecated)\")\n        else:\n            print(f\"‚ÑπÔ∏è  File {file_path} not found (already removed)\")\n    \n    return removed_files\n\ndef create_migration_guide():\n    \"\"\"Create a migration guide for existing installations\"\"\"\n    guide_content = \"\"\"\n# Environment Configuration Migration Guide\n\n## Overview\n\nThis guide helps you migrate from the old environment configuration to the new\nclean configuration structure where platform credentials are stored securely\nin the database.\n\n## Changes Made\n\n### Deprecated Settings Removed\n\nThe following platform-specific settings have been removed from .env files\nand are now managed through the web interface:\n\n- `ACTIVITYPUB_INSTANCE_URL` ‚Üí Database: `PlatformConnection.instance_url`\n- `ACTIVITYPUB_ACCESS_TOKEN` ‚Üí Database: `PlatformConnection.access_token` (encrypted)\n- `ACTIVITYPUB_USERNAME` ‚Üí Database: `PlatformConnection.username`\n- `MASTODON_CLIENT_KEY` ‚Üí Database: `PlatformConnection.client_key` (encrypted)\n- `MASTODON_CLIENT_SECRET` ‚Üí Database: `PlatformConnection.client_secret` (encrypted)\n- `ACTIVITYPUB_API_TYPE` ‚Üí Database: `PlatformConnection.platform_type`\n\n### Migration Steps\n\n1. **Note Your Current Credentials**: Before cleanup, note down your platform credentials from the old .env file\n\n2. **Start the Web Application**: \n   ```bash\n   python web_app.py\n   ```\n\n3. **Access Platform Management**: Go to http://localhost:5000 and navigate to Platform Management\n\n4. **Add Platform Connection**: \n   - Click \"Add Platform\"\n   - Select your platform type (Pixelfed or Mastodon)\n   - Enter your instance URL\n   - Enter your username\n   - Enter your access token\n   - For Mastodon: Also enter client key and secret\n   - Test the connection\n   - Save the configuration\n\n5. **Verify Configuration**: Test caption generation to ensure the platform connection works\n\n6. **Remove Old Backups**: Once confirmed working, you can remove the backup files\n\n## Security Benefits\n\n- **Encrypted Storage**: Platform credentials are now encrypted in the database\n- **Web Management**: Easy credential management through secure web interface\n- **No Plain Text**: No sensitive credentials in environment files\n- **Access Control**: Platform management requires authentication\n\n## Troubleshooting\n\nIf you encounter issues:\n\n1. Check that your platform credentials are correct\n2. Verify the platform connection through the web interface\n3. Check the application logs for detailed error messages\n4. Ensure the `PLATFORM_ENCRYPTION_KEY` is set in your .env file\n\nFor additional help, refer to the main documentation or check the backup files\nin `scripts/setup/` for your old configuration.\n\"\"\"\n    \n    with open('docs/environment-migration-guide.md', 'w') as f:\n        f.write(guide_content)\n    \n    print(\"‚úÖ Created environment migration guide\")\n\ndef main():\n    \"\"\"Main cleanup function\"\"\"\n    print(\"üßπ Starting Environment Files Cleanup\")\n    print(\"=\" * 50)\n    \n    # Step 1: Backup current files\n    print(\"\\n1. Creating backups of current .env files...\")\n    backups = backup_current_files()\n    \n    # Step 2: Replace with cleaned versions\n    print(\"\\n2. Replacing .env files with cleaned versions...\")\n    replace_env_files()\n    \n    # Step 3: Remove deprecated files\n    print(\"\\n3. Removing deprecated .env files...\")\n    removed_files = remove_deprecated_env_files()\n    \n    # Step 4: Create migration guide\n    print(\"\\n4. Creating migration guide...\")\n    create_migration_guide()\n    \n    # Summary\n    print(\"\\n\" + \"=\" * 50)\n    print(\"üéâ ENVIRONMENT CLEANUP COMPLETE\")\n    print(\"=\" * 50)\n    \n    print(\"\\n‚úÖ Actions Completed:\")\n    print(f\"   ‚Ä¢ Created {len(backups)} backup files\")\n    print(\"   ‚Ä¢ Replaced .env and .env.example with cleaned versions\")\n    print(f\"   ‚Ä¢ Moved {len(removed_files)} deprecated files to scripts/setup/\")\n    print(\"   ‚Ä¢ Created environment migration guide\")\n    \n    print(\"\\nüìã Next Steps:\")\n    print(\"   1. Review the new .env file and adjust settings as needed\")\n    print(\"   2. If you had platform credentials, add them via web interface\")\n    print(\"   3. Read docs/environment-migration-guide.md for detailed instructions\")\n    print(\"   4. Test the application to ensure everything works\")\n    \n    print(\"\\n‚ö†Ô∏è  Important Notes:\")\n    print(\"   ‚Ä¢ Platform credentials are now managed through the web interface\")\n    print(\"   ‚Ä¢ Old files are backed up with timestamps if you need to reference them\")\n    print(\"   ‚Ä¢ Deprecated files are moved to scripts/setup/ for reference\")\n\nif __name__ == \"__main__\":\n    main()
# Copyright (C) 2025 iolaire mcfadden.
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
