# Vedfolnir Development Environment Configuration
# This file contains development-specific environment variable examples
# Copy to .env for development setup

# =============================================================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# =============================================================================

# Environment Type
ENVIRONMENT=development
FLASK_ENV=development
FLASK_DEBUG=true

# Application Settings
FLASK_HOST=127.0.0.1
FLASK_PORT=5000
APP_VERSION=0.001-dev

# Security Keys (Generate new ones for your development environment)
FLASK_SECRET_KEY=dev-secret-key-change-me-for-security
PLATFORM_ENCRYPTION_KEY=dev-encryption-key-change-me-for-security

# =============================================================================
# DEVELOPMENT MYSQL CONFIGURATION
# =============================================================================

# Local MySQL Development Setup
DB_TYPE=mysql
DB_NAME=vedfolnir_dev
DB_USER=vedfolnir_dev
DB_PASSWORD=dev_password_123
DB_HOST=localhost
DB_PORT=3306

# Development Database URL
DATABASE_URL=mysql+pymysql://vedfolnir_dev:dev_password_123@localhost:3306/vedfolnir_dev?charset=utf8mb4

# Development Connection Pool (smaller for dev)
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600
DB_POOL_PRE_PING=true
DB_QUERY_LOGGING=true                    # Enable query logging in development

# MySQL Development Settings
MYSQL_SSL_ENABLED=false                  # SSL not required for local development
MYSQL_CHARSET=utf8mb4
MYSQL_COLLATION=utf8mb4_unicode_ci
MYSQL_ENGINE=InnoDB

# =============================================================================
# DEVELOPMENT REDIS CONFIGURATION
# =============================================================================

# Local Redis Development Setup
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=                          # No password for local development
REDIS_SSL=false

# Development Session Settings
REDIS_SESSION_PREFIX=vedfolnir_dev:session:
REDIS_SESSION_TIMEOUT=7200
SESSION_COOKIE_SECURE=false             # Allow HTTP cookies in development

# =============================================================================
# DEVELOPMENT LOGGING AND DEBUGGING
# =============================================================================

# Verbose Logging for Development
LOG_LEVEL=DEBUG
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s

# Development-specific Logging
MYSQL_LOG_QUERIES=true                   # Log all MySQL queries
MYSQL_LOG_SLOW_QUERIES=true
MYSQL_LOG_CONNECTION_EVENTS=true
REDIS_LOG_COMMANDS=true                  # Log Redis commands

# Debug Features
DEBUG_TOOLBAR_ENABLED=true              # Enable Flask debug toolbar
PROFILING_ENABLED=true                  # Enable application profiling
DEVELOPMENT_MODE=true

# =============================================================================
# DEVELOPMENT AI/ML CONFIGURATION
# =============================================================================

# Local Ollama Setup
OLLAMA_URL=CHANGE_ME_TO_OLLAMA_URL_AND_PORT
OLLAMA_MODEL=llava:7b
OLLAMA_TIMEOUT=120.0                     # Longer timeout for development
OLLAMA_MAX_CONCURRENT_REQUESTS=1        # Single request for development

# Development Caption Settings
CAPTION_MAX_LENGTH=500
DRY_RUN=true                            # Enable dry run mode for development
MAX_POSTS_PER_RUN=5                     # Smaller batches for development
USER_PROCESSING_DELAY=2                 # Shorter delays for development

# =============================================================================
# DEVELOPMENT SECURITY SETTINGS
# =============================================================================

# Relaxed Security for Development
SECURITY_CSRF_ENABLED=true              # Keep CSRF enabled for testing
SECURITY_RATE_LIMITING_ENABLED=false    # Disable rate limiting in development
SECURITY_HEADERS_ENABLED=true
SECURITY_SESSION_VALIDATION_ENABLED=true

# Development Authentication
AUTH_REQUIRE_AUTH=true
AUTH_SESSION_LIFETIME=86400             # 24 hours for development

# =============================================================================
# DEVELOPMENT TESTING CONFIGURATION
# =============================================================================

# Test Database
TEST_DATABASE_URL=mysql+pymysql://vedfolnir_test:test_password@localhost:3306/vedfolnir_test?charset=utf8mb4
TEST_REDIS_URL=redis://localhost:6379/1

# Testing Features
TESTING_MODE=false                      # Set to true when running tests
TEST_DATA_CLEANUP=true
TEST_FIXTURES_ENABLED=true
TEST_MOCK_EXTERNAL_APIS=true

# =============================================================================
# DEVELOPMENT MONITORING
# =============================================================================

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30                # More frequent checks in development
MYSQL_HEALTH_CHECK_ENABLED=true
REDIS_HEALTH_CHECK_ENABLED=true

# Metrics (disabled for development)
METRICS_ENABLED=false
PERFORMANCE_MONITORING=false

# =============================================================================
# DEVELOPMENT STORAGE
# =============================================================================

# Development Storage Paths
STORAGE_BASE_DIR=storage/dev
STORAGE_IMAGES_DIR=storage/dev/images
LOGS_DIR=logs/dev
MYSQL_BACKUP_DIR=storage/dev/backups

# Development Retention (shorter periods)
RETENTION_PROCESSING_RUNS=7             # 7 days for development
RETENTION_REJECTED_IMAGES=3             # 3 days for development
RETENTION_POSTED_IMAGES=14              # 14 days for development

# =============================================================================
# DEVELOPMENT SETUP INSTRUCTIONS
# =============================================================================

# SETUP STEPS FOR DEVELOPMENT:
# 1. Install MySQL locally: brew install mysql (macOS) or apt install mysql-server (Ubuntu)
# 2. Install Redis locally: brew install redis (macOS) or apt install redis-server (Ubuntu)
# 3. Create development database:
#    mysql -u root -p -e "CREATE DATABASE vedfolnir_dev CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
#    mysql -u root -p -e "CREATE USER 'vedfolnir_dev'@'localhost' IDENTIFIED BY 'dev_password_123';"
#    mysql -u root -p -e "GRANT ALL PRIVILEGES ON vedfolnir_dev.* TO 'vedfolnir_dev'@'localhost';"
# 4. Create test database:
#    mysql -u root -p -e "CREATE DATABASE vedfolnir_test CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
#    mysql -u root -p -e "CREATE USER 'vedfolnir_test'@'localhost' IDENTIFIED BY 'test_password';"
#    mysql -u root -p -e "GRANT ALL PRIVILEGES ON vedfolnir_test.* TO 'vedfolnir_test'@'localhost';"
# 5. Start Redis: redis-server
# 6. Copy this file to .env: cp .env.development.example .env
# 7. Generate secure keys: python3 scripts/setup/generate_env_secrets.py
# 8. Initialize database: python3 -c "from database import init_db; init_db()"
# 9. Create admin user: python3 scripts/setup/init_admin_user.py
# 10. Start development server: python3 web_app.py

# DEVELOPMENT NOTES:
# - This configuration is optimized for local development
# - Security settings are relaxed for easier development
# - Logging is verbose for debugging
# - Database and Redis run locally without SSL
# - Smaller connection pools and batch sizes for resource efficiency
# - Debug features are enabled for development assistance
