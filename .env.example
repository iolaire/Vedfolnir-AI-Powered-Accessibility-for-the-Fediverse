# Vedfolnir MySQL Configuration Template
# Copy this file to .env and configure your settings

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# App version
APP_VERSION=0.001

# Flask Application
FLASK_HOST=127.0.0.1
FLASK_PORT=5000
FLASK_DEBUG=false

# Flask Secret Key - REQUIRED for session security and CSRF protection
# Generate a secure key using: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
# NEVER use the example value below in production!
FLASK_SECRET_KEY=CHANGE_ME_TO_A_SECURE_32_CHAR_SECRET_KEY

# =============================================================================
# MYSQL DATABASE CONFIGURATION
# =============================================================================

# Database Type (MySQL only - SQLite no longer supported)
DB_TYPE=mysql

# Basic MySQL Configuration
DB_NAME=vedfolnir
DB_USER=vedfolnir_user
DB_PASSWORD=secure_mysql_password_here
DB_HOST=localhost
DB_PORT=3306

# MySQL Connection Options
# Choose ONE of the following connection methods:

# Option 1: TCP Connection (Recommended for most deployments)
DATABASE_URL=mysql+pymysql://vedfolnir_user:secure_mysql_password_here@localhost:3306/vedfolnir?charset=utf8mb4

# Option 2: Unix Socket Connection (Better performance for local connections)
# DB_UNIX_SOCKET=/var/run/mysqld/mysqld.sock
# DATABASE_URL=mysql+pymysql://vedfolnir_user:secure_mysql_password_here@localhost/vedfolnir?unix_socket=/var/run/mysqld/mysqld.sock&charset=utf8mb4

# Option 3: SSL/TLS Encrypted Connection (Recommended for production)
# DATABASE_URL=mysql+pymysql://vedfolnir_user:secure_mysql_password_here@localhost:3306/vedfolnir?charset=utf8mb4&ssl_disabled=false&ssl_verify_cert=true&ssl_verify_identity=true

# Option 4: Docker/Container Connection
# DATABASE_URL=mysql+pymysql://vedfolnir_user:secure_mysql_password_here@mysql:3306/vedfolnir?charset=utf8mb4

# Option 5: Remote MySQL Server with SSL
# DATABASE_URL=mysql+pymysql://vedfolnir_user:secure_mysql_password_here@mysql.example.com:3306/vedfolnir?charset=utf8mb4&ssl_disabled=false&ssl_ca=/path/to/ca.pem&ssl_cert=/path/to/client-cert.pem&ssl_key=/path/to/client-key.pem

# =============================================================================
# MYSQL SSL/TLS CONFIGURATION
# =============================================================================

# MySQL SSL Configuration (for secure connections)
# Enable SSL for production deployments
MYSQL_SSL_ENABLED=false
MYSQL_SSL_VERIFY_CERT=true
MYSQL_SSL_VERIFY_IDENTITY=true

# SSL Certificate Paths (adjust paths as needed)
# MYSQL_SSL_CA=/etc/mysql/ssl/ca.pem
# MYSQL_SSL_CERT=/etc/mysql/ssl/client-cert.pem
# MYSQL_SSL_KEY=/etc/mysql/ssl/client-key.pem

# SSL Cipher Configuration (optional, for enhanced security)
# MYSQL_SSL_CIPHER=ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256

# =============================================================================
# MYSQL CONNECTION POOL CONFIGURATION
# =============================================================================

# Connection Pool Settings (SQLAlchemy)
# Adjust based on your application load and MySQL server capacity
DB_POOL_SIZE=20                    # Number of connections to maintain in pool
DB_MAX_OVERFLOW=30                 # Additional connections beyond pool_size
DB_POOL_TIMEOUT=30                 # Seconds to wait for connection from pool
DB_POOL_RECYCLE=3600              # Recycle connections after 1 hour
DB_POOL_PRE_PING=true             # Validate connections before use
DB_QUERY_LOGGING=false            # Enable SQL query logging (development only)

# MySQL Connection Parameters
DB_CONNECT_TIMEOUT=60             # Connection timeout in seconds
DB_READ_TIMEOUT=30                # Read timeout in seconds
DB_WRITE_TIMEOUT=30               # Write timeout in seconds
DB_AUTOCOMMIT=false               # Disable autocommit for transaction control

# =============================================================================
# MYSQL PERFORMANCE CONFIGURATION
# =============================================================================

# MySQL Performance Settings
# These settings optimize the application for MySQL performance
MYSQL_CHARSET=utf8mb4             # Character set for full Unicode support
MYSQL_COLLATION=utf8mb4_unicode_ci # Collation for proper Unicode sorting
MYSQL_ENGINE=InnoDB               # Storage engine (InnoDB recommended)

# Query Optimization
MYSQL_QUERY_CACHE_ENABLED=true    # Enable application-level query caching
MYSQL_QUERY_CACHE_SIZE=1000       # Number of queries to cache
MYSQL_QUERY_CACHE_TTL=300         # Cache TTL in seconds

# Batch Operation Settings
MYSQL_BATCH_SIZE=100              # Default batch size for bulk operations
MYSQL_MAX_BATCH_SIZE=1000         # Maximum batch size limit

# =============================================================================
# MYSQL MONITORING AND DIAGNOSTICS
# =============================================================================

# MySQL Health Check Configuration
MYSQL_HEALTH_CHECK_ENABLED=true   # Enable MySQL health checks
MYSQL_HEALTH_CHECK_INTERVAL=60    # Health check interval in seconds
MYSQL_HEALTH_CHECK_TIMEOUT=10     # Health check timeout in seconds

# MySQL Performance Monitoring
MYSQL_PERFORMANCE_MONITORING=true # Enable performance monitoring
MYSQL_SLOW_QUERY_THRESHOLD=2.0   # Log queries slower than 2 seconds
MYSQL_CONNECTION_MONITORING=true  # Monitor connection pool usage

# MySQL Error Handling
MYSQL_RETRY_ENABLED=true          # Enable automatic retry on connection errors
MYSQL_RETRY_MAX_ATTEMPTS=3        # Maximum retry attempts
MYSQL_RETRY_DELAY=1.0             # Initial retry delay in seconds
MYSQL_RETRY_BACKOFF=2.0           # Retry backoff multiplier

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Configuration for Session Storage
REDIS_URL=redis://:your-redis-password@localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=your-redis-password
REDIS_SSL=false

# Redis SSL Configuration (for secure Redis connections)
# REDIS_SSL=true
# REDIS_SSL_CERT_REQS=required
# REDIS_SSL_CA_CERTS=/path/to/ca.pem
# REDIS_SSL_CERTFILE=/path/to/client.pem
# REDIS_SSL_KEYFILE=/path/to/client-key.pem

SESSION_STORAGE=redis

# Redis Session Settings
REDIS_SESSION_PREFIX=vedfolnir:session:
REDIS_SESSION_TIMEOUT=7200        # Session timeout in seconds (2 hours)
REDIS_SESSION_CLEANUP_INTERVAL=3600 # Cleanup interval in seconds (1 hour)

# Redis Connection Pool Settings
REDIS_POOL_MAX_CONNECTIONS=50     # Maximum Redis connections
REDIS_POOL_RETRY_ON_TIMEOUT=true  # Retry on connection timeout
REDIS_SOCKET_KEEPALIVE=true       # Enable socket keepalive
REDIS_SOCKET_KEEPALIVE_OPTIONS={}  # Keepalive options

# Flask Session Cookie Configuration
SESSION_COOKIE_NAME=session
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SECURE=true        # Set to false for development over HTTP
SESSION_COOKIE_SAMESITE=Lax
SESSION_COOKIE_MAX_AGE=7200       # Cookie max age in seconds (2 hours)

# Database Session Fallback
DB_SESSION_FALLBACK=true          # Enable database fallback for session persistence
DB_SESSION_SYNC=true              # Sync session data between Redis and database

# =============================================================================
# AI/ML CONFIGURATION
# =============================================================================

# Ollama Configuration
OLLAMA_URL=CHANGE_ME_TO_OLLAMA_URL_AND_PORT
OLLAMA_MODEL=llava:7b
OLLAMA_TIMEOUT=60.0

# Ollama Performance Settings
OLLAMA_MAX_CONCURRENT_REQUESTS=3  # Maximum concurrent Ollama requests
OLLAMA_REQUEST_TIMEOUT=120        # Request timeout in seconds
OLLAMA_RETRY_ATTEMPTS=2           # Number of retry attempts for failed requests

# =============================================================================
# CAPTION GENERATION SETTINGS
# =============================================================================

# Caption Configuration
CAPTION_MAX_LENGTH=500
CAPTION_OPTIMAL_MIN_LENGTH=150
CAPTION_OPTIMAL_MAX_LENGTH=450
CAPTION_MAX_STORAGE_GB=5

# Enhanced Image Classification
USE_ENHANCED_CLASSIFICATION=true
CLASSIFICATION_CONFIDENCE_THRESHOLD=0.7
LLAVA_CLASSIFICATION_TEMPERATURE=0.1

# Fallback Configuration
FALLBACK_ENABLED=true
FALLBACK_MAX_ATTEMPTS=2
FALLBACK_USE_SIMPLIFIED_PROMPTS=true
FALLBACK_USE_BACKUP_MODEL=true
FALLBACK_BACKUP_MODEL=llava:13b-v1.6

# =============================================================================
# PROCESSING CONFIGURATION
# =============================================================================

# Processing Limits
MAX_POSTS_PER_RUN=10
MAX_USERS_PER_RUN=10
USER_PROCESSING_DELAY=5
DRY_RUN=true

# Batch Update Configuration
BATCH_UPDATE_ENABLED=true
BATCH_UPDATE_SIZE=5
BATCH_UPDATE_MAX_CONCURRENT=2
BATCH_UPDATE_VERIFICATION_DELAY=2
BATCH_UPDATE_ROLLBACK_ON_FAILURE=true

# =============================================================================
# RETRY AND RATE LIMITING
# =============================================================================

# Retry Configuration
RETRY_MAX_ATTEMPTS=3
RETRY_BASE_DELAY=1.0
RETRY_MAX_DELAY=30.0
RETRY_BACKOFF_FACTOR=2.0
RETRY_USE_JITTER=true
RETRY_JITTER_FACTOR=0.1
RETRY_ON_TIMEOUT=true
RETRY_ON_CONNECTION_ERROR=true
RETRY_ON_SERVER_ERROR=true
RETRY_ON_RATE_LIMIT=true
RETRY_SPECIFIC_ERRORS=connection reset by peer,connection refused,temporary failure

# Rate Limiting Configuration
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_REQUESTS_PER_HOUR=1000
RATE_LIMIT_REQUESTS_PER_DAY=10000
RATE_LIMIT_MAX_BURST=10

# Endpoint-specific rate limits
RATE_LIMIT_ENDPOINT_MEDIA_MINUTE=30
RATE_LIMIT_ENDPOINT_MEDIA_HOUR=300
RATE_LIMIT_ENDPOINT_STATUSES_MINUTE=60
RATE_LIMIT_ENDPOINT_STATUSES_HOUR=600

# =============================================================================
# AUTHENTICATION AND SECURITY
# =============================================================================

# Authentication Configuration
AUTH_REQUIRE_AUTH=true
AUTH_SESSION_LIFETIME=86400
AUTH_REMEMBER_COOKIE_DURATION=2592000

# Platform Encryption Key - REQUIRED for encrypting stored platform credentials
# Generate using: python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# This key encrypts API tokens and credentials stored in the MySQL database
# If lost, all stored platform credentials become unrecoverable
# NEVER use the example value below in production!
PLATFORM_ENCRYPTION_KEY=CHANGE_ME_TO_A_FERNET_ENCRYPTION_KEY

# Security Configuration
SECURITY_ENCRYPTION_ALGORITHM=Fernet  # Encryption algorithm for sensitive data
SECURITY_KEY_ROTATION_ENABLED=false   # Enable automatic key rotation
SECURITY_KEY_ROTATION_INTERVAL=2592000 # Key rotation interval (30 days)

# Password Security
PASSWORD_MIN_LENGTH=12                # Minimum password length
PASSWORD_REQUIRE_UPPERCASE=true       # Require uppercase letters
PASSWORD_REQUIRE_LOWERCASE=true       # Require lowercase letters
PASSWORD_REQUIRE_NUMBERS=true         # Require numbers
PASSWORD_REQUIRE_SYMBOLS=true         # Require special characters
PASSWORD_HASH_ROUNDS=12               # bcrypt hash rounds

# =============================================================================
# SESSION MANAGEMENT CONFIGURATION
# =============================================================================

# Session Environment (development, testing, staging, production)
SESSION_ENVIRONMENT=development
SESSION_DEBUG_MODE=false

# Testing Configuration
DISABLE_CSRF_FOR_TESTING=false

# Session Timeout Configuration
SESSION_LIFETIME_SECONDS=172800       # 48 hours
SESSION_IDLE_TIMEOUT_SECONDS=86400    # 24 hours
SESSION_ABSOLUTE_TIMEOUT_SECONDS=604800 # 7 days
SESSION_EXPIRATION_GRACE_SECONDS=300  # 5 minutes
SESSION_CLEANUP_GRACE_SECONDS=600     # 10 minutes
SESSION_WARNING_THRESHOLD_SECONDS=900 # 15 minutes

# Session Cleanup Configuration
SESSION_CLEANUP_INTERVAL_SECONDS=1800 # 30 minutes
SESSION_BATCH_CLEANUP_INTERVAL_SECONDS=21600 # 6 hours
SESSION_DEEP_CLEANUP_INTERVAL_SECONDS=86400 # 24 hours
SESSION_CLEANUP_BATCH_SIZE=100
SESSION_MAX_CLEANUP_BATCHES=10
SESSION_MAX_EXPIRED_THRESHOLD=1000
SESSION_CLEANUP_TRIGGER_THRESHOLD=500
SESSION_EXPIRED_RETENTION_DAYS=7
SESSION_AUDIT_RETENTION_DAYS=30

# Cross-Tab Synchronization Configuration
SESSION_SYNC_CHECK_INTERVAL_SECONDS=2
SESSION_HEARTBEAT_INTERVAL_SECONDS=30
SESSION_SYNC_TIMEOUT_SECONDS=5
SESSION_TAB_RESPONSE_TIMEOUT_SECONDS=3
SESSION_LOCALSTORAGE_PREFIX=vedfolnir_session_
SESSION_MAX_SYNC_DATA_SIZE=1024

# Session Security Configuration
SESSION_ENABLE_FINGERPRINTING=true
SESSION_ENABLE_SUSPICIOUS_DETECTION=true
SESSION_ENABLE_AUDIT_LOGGING=true
SESSION_MAX_CONCURRENT_PER_USER=5
SESSION_SUSPICIOUS_ACTIVITY_THRESHOLD=10
SESSION_MAX_PLATFORM_SWITCHES_PER_HOUR=50
SESSION_SECURITY_CHECK_INTERVAL_SECONDS=300

# Session Monitoring Configuration
SESSION_ENABLE_PERFORMANCE_MONITORING=true
SESSION_ENABLE_METRICS_COLLECTION=true
SESSION_ENABLE_HEALTH_CHECKS=true
SESSION_METRICS_INTERVAL_SECONDS=60
SESSION_HEALTH_CHECK_INTERVAL_SECONDS=300
SESSION_METRICS_BUFFER_SIZE=1000
SESSION_EVENTS_BUFFER_SIZE=500

# Session Alert Thresholds
SESSION_ALERT_CREATION_RATE=100.0
SESSION_ALERT_FAILURE_RATE=10.0
SESSION_ALERT_AVG_DURATION=3600.0
SESSION_ALERT_CONCURRENT_SESSIONS=1000.0
SESSION_ALERT_SUSPICIOUS_RATE=5.0

# Session Feature Flags
SESSION_FEATURE_CROSS_TAB_SYNC=true
SESSION_FEATURE_PLATFORM_SWITCHING=true
SESSION_FEATURE_PERSISTENCE=true
SESSION_FEATURE_OPTIMISTIC_UI=true
SESSION_FEATURE_BACKGROUND_CLEANUP=true
SESSION_FEATURE_ANALYTICS=true
SESSION_FEATURE_CLUSTERING=false
SESSION_FEATURE_DISTRIBUTED=false
SESSION_FEATURE_CACHING=false

# =============================================================================
# STORAGE AND LOGGING
# =============================================================================

# Storage Configuration
STORAGE_BASE_DIR=storage
STORAGE_IMAGES_DIR=storage/images
LOGS_DIR=logs

# MySQL-specific storage settings
MYSQL_BACKUP_DIR=storage/backups/mysql    # MySQL backup storage directory
MYSQL_TEMP_DIR=storage/temp               # Temporary directory for MySQL operations

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_MAX_BYTES=10485760                    # 10MB log file size limit
LOG_BACKUP_COUNT=5                        # Number of backup log files to keep

# MySQL-specific logging
MYSQL_LOG_QUERIES=false                   # Log all MySQL queries (development only)
MYSQL_LOG_SLOW_QUERIES=true              # Log slow MySQL queries
MYSQL_LOG_CONNECTION_EVENTS=false        # Log MySQL connection events

# Data Retention Configuration (in days)
RETENTION_PROCESSING_RUNS=90
RETENTION_REJECTED_IMAGES=30
RETENTION_POSTED_IMAGES=180
RETENTION_ERROR_IMAGES=60
RETENTION_MYSQL_BACKUPS=30               # MySQL backup retention period
RETENTION_MYSQL_LOGS=7                   # MySQL log retention period

# =============================================================================
# SECURITY FEATURE TOGGLES
# =============================================================================

# CSRF Protection
SECURITY_CSRF_ENABLED=true

# Rate Limiting
SECURITY_RATE_LIMITING_ENABLED=true

# Input Validation and Sanitization
SECURITY_INPUT_VALIDATION_ENABLED=true

# Security Headers
SECURITY_HEADERS_ENABLED=true

# Session Security Validation
SECURITY_SESSION_VALIDATION_ENABLED=true

# Admin Access Control
SECURITY_ADMIN_CHECKS_ENABLED=true

# MySQL Security Features
MYSQL_SSL_REQUIRED=false                 # Require SSL for MySQL connections
MYSQL_VALIDATE_SERVER_CERT=true         # Validate MySQL server certificate
MYSQL_ENCRYPT_CREDENTIALS=true          # Encrypt MySQL credentials in memory

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================

# Email Configuration (for user notifications)
MAIL_SERVER=smtp.example.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USE_SSL=false
MAIL_USERNAME=your-mail-username
MAIL_PASSWORD=your-mail-password
MAIL_DEFAULT_SENDER=admin@vedfolnir.org

# Email Security
MAIL_SUPPRESS_SEND=false                 # Suppress email sending (testing)
MAIL_ASCII_ATTACHMENTS=false            # Force ASCII attachment names

# =============================================================================
# MONITORING AND HEALTH CHECKS
# =============================================================================

# Application Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=60                 # Health check interval in seconds
HEALTH_CHECK_TIMEOUT=10                  # Health check timeout in seconds

# Component Health Checks
HEALTH_CHECK_MYSQL=true                  # Enable MySQL health checks
HEALTH_CHECK_REDIS=true                  # Enable Redis health checks
HEALTH_CHECK_OLLAMA=true                 # Enable Ollama health checks
HEALTH_CHECK_DISK_SPACE=true            # Enable disk space checks

# Health Check Thresholds
HEALTH_CHECK_MYSQL_MAX_CONNECTIONS=80    # MySQL connection usage threshold (%)
HEALTH_CHECK_REDIS_MEMORY_THRESHOLD=80   # Redis memory usage threshold (%)
HEALTH_CHECK_DISK_SPACE_THRESHOLD=85     # Disk space usage threshold (%)

# Metrics Collection
METRICS_ENABLED=true
METRICS_INTERVAL=60                      # Metrics collection interval in seconds
METRICS_RETENTION_DAYS=30               # Metrics retention period

# =============================================================================
# DEVELOPMENT AND TESTING CONFIGURATION
# =============================================================================

# Development Settings
DEVELOPMENT_MODE=false
DEBUG_TOOLBAR_ENABLED=false             # Enable Flask debug toolbar
PROFILING_ENABLED=false                 # Enable application profiling

# Testing Configuration
TESTING_MODE=false
TEST_DATABASE_URL=mysql+pymysql://test_user:test_password@localhost/vedfolnir_test?charset=utf8mb4
TEST_REDIS_URL=redis://localhost:6379/1

# Test Data Configuration
TEST_DATA_CLEANUP=true                  # Clean up test data after tests
TEST_FIXTURES_ENABLED=true             # Enable test fixtures
TEST_MOCK_EXTERNAL_APIS=true           # Mock external API calls in tests

# =============================================================================
# PRODUCTION OPTIMIZATION
# =============================================================================

# Production Settings
PRODUCTION_MODE=false
OPTIMIZE_FOR_PRODUCTION=false

# Caching Configuration
CACHE_ENABLED=true
CACHE_TYPE=redis                        # Cache backend (redis, memory, filesystem)
CACHE_DEFAULT_TIMEOUT=300               # Default cache timeout in seconds
CACHE_KEY_PREFIX=vedfolnir_cache_       # Cache key prefix

# Performance Optimization
ENABLE_GZIP_COMPRESSION=true            # Enable gzip compression
STATIC_FILE_CACHING=true               # Enable static file caching
TEMPLATE_CACHING=true                  # Enable template caching

# Resource Limits
MAX_CONTENT_LENGTH=16777216             # Maximum request size (16MB)
MAX_FORM_MEMORY_SIZE=2097152           # Maximum form memory size (2MB)

# =============================================================================
# PLATFORM CONNECTIONS
# =============================================================================
# Platform-specific settings (URLs, tokens, credentials) are now managed
# through the web interface for better security and ease of use.
#
# To configure platform connections:
# 1. Start the web application: python web_app.py
# 2. Go to Platform Management in the web interface
# 3. Click "Add Platform" to configure your connections
# 4. Enter your platform details and credentials
# 5. Test the connection to ensure it works
#
# Supported platforms:
# - Pixelfed: Requires instance URL, username, and access token
# - Mastodon: Requires instance URL, username, access token, and OAuth credentials
#
# All credentials are encrypted and stored securely in the MySQL database.
# No platform credentials should be stored in this .env file.

# =============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# =============================================================================

# Development Environment Example:
# DATABASE_URL=mysql+pymysql://vedfolnir_dev:dev_password@localhost/vedfolnir_dev?charset=utf8mb4
# REDIS_URL=redis://localhost:6379/0
# FLASK_DEBUG=true
# LOG_LEVEL=DEBUG
# MYSQL_LOG_QUERIES=true

# Staging Environment Example:
# DATABASE_URL=mysql+pymysql://vedfolnir_staging:staging_password@staging-mysql:3306/vedfolnir_staging?charset=utf8mb4&ssl_disabled=false
# REDIS_URL=redis://:staging_redis_password@staging-redis:6379/0
# FLASK_DEBUG=false
# LOG_LEVEL=INFO
# MYSQL_SSL_ENABLED=true

# Production Environment Example:
# DATABASE_URL=mysql+pymysql://vedfolnir_prod:prod_password@prod-mysql:3306/vedfolnir_prod?charset=utf8mb4&ssl_disabled=false&ssl_verify_cert=true
# REDIS_URL=redis://:prod_redis_password@prod-redis:6379/0
# FLASK_DEBUG=false
# LOG_LEVEL=WARNING
# MYSQL_SSL_ENABLED=true
# MYSQL_SSL_REQUIRED=true
# PRODUCTION_MODE=true
# OPTIMIZE_FOR_PRODUCTION=true

# =============================================================================
# DOCKER/CONTAINER CONFIGURATION
# =============================================================================

# Docker-specific settings
DOCKER_DEPLOYMENT=false
CONTAINER_NAME=vedfolnir_app

# Docker MySQL Configuration
# DATABASE_URL=mysql+pymysql://vedfolnir:vedfolnir_password@mysql:3306/vedfolnir?charset=utf8mb4
# REDIS_URL=redis://redis:6379/0

# Docker Health Check Settings
DOCKER_HEALTH_CHECK_INTERVAL=30s
DOCKER_HEALTH_CHECK_TIMEOUT=10s
DOCKER_HEALTH_CHECK_RETRIES=3

# =============================================================================
# CLOUD DEPLOYMENT CONFIGURATION
# =============================================================================

# AWS RDS MySQL Configuration Example:
# DATABASE_URL=mysql+pymysql://vedfolnir:password@vedfolnir-mysql.cluster-xyz.us-east-1.rds.amazonaws.com:3306/vedfolnir?charset=utf8mb4&ssl_disabled=false

# Google Cloud SQL MySQL Configuration Example:
# DATABASE_URL=mysql+pymysql://vedfolnir:password@/vedfolnir?unix_socket=/cloudsql/project:region:instance&charset=utf8mb4

# Azure Database for MySQL Configuration Example:
# DATABASE_URL=mysql+pymysql://vedfolnir@server:password@server.mysql.database.azure.com:3306/vedfolnir?charset=utf8mb4&ssl_disabled=false

# =============================================================================
# SECURITY WARNINGS AND SETUP INSTRUCTIONS
# =============================================================================

# SECURITY WARNING: 
# - Copy this file to .env and replace ALL example values with secure, unique values
# - The .env file is gitignored and should never be committed to version control
# - Generate secure passwords and keys using the provided scripts
# - Enable SSL/TLS for all production deployments
# - Regularly rotate encryption keys and passwords
# - Monitor access logs and enable security alerts

# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Generate secure values: python3 scripts/setup/generate_env_secrets.py
# 3. Configure MySQL database: See docs/mysql-installation-guide.md
# 4. Set up Redis server: See docs/deployment/redis-setup.md
# 5. Configure SSL certificates: See docs/security/ssl-setup.md
# 6. Test configuration: python3 scripts/setup/verify_env_setup.py
# 7. Create admin user: python3 scripts/setup/init_admin_user.py

# DOCUMENTATION REFERENCES:
# - Complete setup guide: docs/user_guide.md
# - Security configuration: docs/SECURITY.md
# - MySQL deployment: docs/deployment/mysql-deployment-guide.md
# - Environment setup: docs/security/environment-setup.md
# - Troubleshooting: docs/troubleshooting.md
